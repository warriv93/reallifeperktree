{"ast":null,"code":"var _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/src/components/Perk.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Perklevel from './Perklevel';\nimport image_placeholder from \"../assets/404Code.jpg\";\nlet amountOfLevels = 5;\nexport default class Perk extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.title,\n      perkLevel: 0\n    };\n  }\n\n  createPerkLevels(amountOfLevels) {\n    for (let index = 1; index < amountOfLevels; index++) {\n      __jsx(Perklevel, {\n        onClick: e => this.PerklevelClicked(e, index),\n        image: image_placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }\n\n  PerklevelClicked(e, perkLevel) {\n    // if not previously assigned set opacity 1\n    console.log(\"PerklevelClicked\", this.state.title, perkLevel);\n    e.target.style.opacity = '1';\n    this.setState({\n      perkLevel: perkLevel,\n      oldElementTarget: e.target\n    }); // if  previously assigned set opacity .6 to old element and 1 to new element\n\n    this.state.oldElementTarget ? this.state.oldElementTarget.style.opacity = '0.6' : null; //save perkLevel to state from each perk\n\n    this.props.updatePerkLevelList({\n      title: this.state.title,\n      perkLevel: perkLevel\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"perktree-perk-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"perk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: \"perk-level title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.title)), this.createPerkLevels(amountOfLevels)));\n  }\n\n}","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/src/components/Perk.tsx"],"names":["React","Component","Perklevel","image_placeholder","amountOfLevels","Perk","constructor","props","state","title","perkLevel","createPerkLevels","index","e","PerklevelClicked","console","log","target","style","opacity","setState","oldElementTarget","updatePerkLevelList","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,iBAAP,MAA8B,uBAA9B;AASA,IAAIC,cAAsB,GAAG,CAA7B;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6C;AACxDK,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACvB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADR;AAEVC,MAAAA,SAAS,EAAE;AAFD,KAAd;AAIH;;AAEDC,EAAAA,gBAAgB,CAACP,cAAD,EAAyB;AACrC,SAAK,IAAIQ,KAAa,GAAG,CAAzB,EAA4BA,KAAK,GAAGR,cAApC,EAAoDQ,KAAK,EAAzD,EAA6D;AACzD,YAAC,SAAD;AAAW,QAAA,OAAO,EAAGC,CAAD,IAAc,KAAKC,gBAAL,CAAsBD,CAAtB,EAAyBD,KAAzB,CAAlC;AAAmE,QAAA,KAAK,EAAET,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACJ;;AAEDW,EAAAA,gBAAgB,CAAED,CAAF,EAAYH,SAAZ,EAA+B;AAC3C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKR,KAAL,CAAWC,KAA3C,EAAkDC,SAAlD;AACAG,IAAAA,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,OAAf,GAAyB,GAAzB;AACA,SAAKC,QAAL,CAAc;AACVV,MAAAA,SAAS,EAAEA,SADD;AAEVW,MAAAA,gBAAgB,EAAER,CAAC,CAACI;AAFV,KAAd,EAJ2C,CAQ3C;;AACA,SAAKT,KAAL,CAAWa,gBAAX,GAA8B,KAAKb,KAAL,CAAWa,gBAAX,CAA4BH,KAA5B,CAAkCC,OAAlC,GAA4C,KAA1E,GAAkF,IAAlF,CAT2C,CAW3C;;AACA,SAAKZ,KAAL,CAAWe,mBAAX,CAA+B;AAC3Bb,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADS;AAE3BC,MAAAA,SAAS,EAAEA;AAFgB,KAA/B;AAIH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKhB,KAAL,CAAWE,KAAlB,CAAjC,CADJ,EAGQ,KAAKE,gBAAL,CAAsBP,cAAtB,CAHR,CADJ,CADJ;AAUH;;AA7CuD","sourcesContent":["import React, { Component } from 'react'\nimport Perklevel from './Perklevel';\n\nimport image_placeholder from \"../assets/404Code.jpg\";\ninterface IProps {\n    title?: string,\n}\n\ninterface IState {\n    title?: string,\n    perkLevel: number,\n}\nlet amountOfLevels: number = 5;\n\nexport default class Perk extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = ({\n            title: this.props.title,\n            perkLevel: 0,\n        })\n    }\n\n    createPerkLevels(amountOfLevels: number) {\n        for (let index: number = 1; index < amountOfLevels; index++) {\n            <Perklevel onClick={(e: Event) => this.PerklevelClicked(e, index)} image={image_placeholder}/>\n        }\n    }\n    \n    PerklevelClicked (e: Event, perkLevel: number) {\n        // if not previously assigned set opacity 1\n        console.log(\"PerklevelClicked\", this.state.title, perkLevel);\n        e.target.style.opacity = '1';\n        this.setState({\n            perkLevel: perkLevel,\n            oldElementTarget: e.target\n        })\n        // if  previously assigned set opacity .6 to old element and 1 to new element\n        this.state.oldElementTarget ? this.state.oldElementTarget.style.opacity = '0.6' : null;\n\n        //save perkLevel to state from each perk\n        this.props.updatePerkLevelList({\n            title: this.state.title, \n            perkLevel: perkLevel\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"perktree-perk-container\">\n                <ul className=\"perk\">\n                    <li className=\"perk-level title\"><span>{this.props.title}</span></li>\n                    {\n                        this.createPerkLevels(amountOfLevels)\n                    }\n                </ul>\n            </div>    \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}