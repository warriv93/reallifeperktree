{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/components/Prices.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = '';\n      var currentCurrency = '';\n\n      switch (this.state.currency) {\n        case 'USD':\n          currentCurrency = this.props.bpi.USD;\n          break;\n\n        case 'EUR':\n          currentCurrency = this.props.bpi.EUR;\n          break;\n\n        case 'GBP':\n          currentCurrency = this.props.bpi.GBP;\n          break;\n\n        default:\n          currentCurrency = this.props.bpi.USD;\n          break;\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Bitcoin rate for \", currentCurrency.description, \" : \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, currentCurrency.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, currentCurrency.rate))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"EUR\")), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.disclaimer));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/components/Prices.jsx"],"names":["Prices","currency","list","currentCurrency","state","props","bpi","USD","EUR","GBP","description","code","rate","e","setState","target","value","disclaimer","React","Component"],"mappings":";;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;;6BAIE;AAAA;;AACN,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,eAAe,GAAG,EAAtB;;AAEA,cAAQ,KAAKC,KAAL,CAAWH,QAAnB;AACI,aAAK,KAAL;AACIE,UAAAA,eAAe,GAAG,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAjC;AACA;;AACJ,aAAK,KAAL;AACIJ,UAAAA,eAAe,GAAG,KAAKE,KAAL,CAAWC,GAAX,CAAeE,GAAjC;AACA;;AACJ,aAAK,KAAL;AACIL,UAAAA,eAAe,GAAG,KAAKE,KAAL,CAAWC,GAAX,CAAeG,GAAjC;AACA;;AACJ;AACIN,UAAAA,eAAe,GAAG,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAjC;AACA;AAZR;;AAeA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsBJ,eAAe,CAACO,WADtC,SACqD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCP,eAAe,CAACQ,IAAvD,CADrD,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASR,eAAe,CAACS,IAAzB,CAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI;AAAQ,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAACb,YAAAA,QAAQ,EAAEY,CAAC,CAACE,MAAF,CAASC;AAApB,WAAd,CAAJ;AAAA,SAAnB;AAAkE,QAAA,SAAS,EAAC,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CARJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKX,KAAL,CAAWY,UAAf,CAbJ,CADJ;AAiBH;;;;EAzCgBC,KAAK,CAACC,S;;AA4C3B,eAAenB,MAAf","sourcesContent":["class Prices extends React.Component {\n    state = {\n        currency: 'USD'\n    }\n\n    render () {\n        let list = '';\n        let currentCurrency = '';\n\n        switch (this.state.currency) {\n            case 'USD':\n                currentCurrency = this.props.bpi.USD;\n                break;\n            case 'EUR':\n                currentCurrency = this.props.bpi.EUR;\n                break;\n            case 'GBP':\n                currentCurrency = this.props.bpi.GBP;\n                break;\n            default:\n                currentCurrency = this.props.bpi.USD;\n                break;\n        }\n\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        Bitcoin rate for {currentCurrency.description} : <span className=\"badge badge-primary\">{currentCurrency.code}</span> \n                        <strong>{currentCurrency.rate}</strong>\n                    </li>\n                </ul>\n                <br/>\n                <select onChange={e => this.setState({currency: e.target.value})} className=\"form-control\">\n                    <option value=\"USD\">USD</option>\n                    <option value=\"GBP\">GBP</option>\n                    <option value=\"EUR\">EUR</option>\n                </select>\n                <p>{this.props.disclaimer}</p>\n            </div>\n        );\n    }\n}\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}