{"ast":null,"code":"var _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/src/api/user.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { setUserLoggedin, logout } from \"../api/userlocalstorage\";\nimport Router from \"next/router\";\nimport Toast from \"../components/Toast\";\n\nfunction authenticateUserLogin(username, password, callback) {\n  var _this = this;\n\n  axios.post(\"http://127.0.0.1:1337/user/login\", {\n    username: username,\n    password: password\n  }).then(function (response) {\n    // set the user data and boolean loggedin into localstorage\n    getUserbyUsername(response.data.username, function (res) {\n      setUserLoggedin(res.data);\n      Router.push(\"/perktree\");\n      return __jsx(Toast, {\n        text: \"Successfully logged in\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }\n      });\n    });\n  })[\"catch\"](function (error) {\n    console.error(error);\n    callback({\n      wrongPasswordOrUsername: true\n    });\n  });\n} // Request a user based on username and password, if anything is found pass it back up to parent\n\n\nfunction createUser(username, password, email, callback) {\n  axios.post(\"http://127.0.0.1:1337/user/new\", {\n    username: username,\n    password: password,\n    email: email,\n    profilePicture: \"\"\n  }).then(function (response) {\n    if (response.data.error) {\n      callback({\n        error: response.data.error\n      });\n    } else {\n      delete response.data._id; // set the user data and boolean loggedin into localstorage\n\n      setUserLoggedin(response.data);\n      Router.push(\"/perktree\");\n    }\n  })[\"catch\"](function (error) {\n    console.error(error);\n    callback({\n      error: error\n    });\n  });\n}\n\nfunction getUserbyUsername(username, callback) {\n  axios.get(\"http://127.0.0.1:1337/user/find/\".concat(username)).then(function (res) {\n    callback(res); //username not found\n  })[\"catch\"](function (err) {\n    console.error(err);\n    alert(\"User not found\");\n  });\n}\n\nfunction deleteUser(username) {\n  axios.get(\"http://127.0.0.1:1337/user/find/\".concat(username)).then(function (res) {\n    var userid = res.data[0]._id;\n    axios[\"delete\"](\"http://127.0.0.1:1337/user/delete/\".concat(userid)).then(function (res) {\n      if (res) {\n        logout();\n        Router.push(\"/perktree\");\n      } // id not found\n\n    })[\"catch\"](function (err) {\n      console.error(err);\n      alert(\"User not found\");\n    }); //username not found\n  })[\"catch\"](function (err) {\n    console.error(err);\n    alert(\"User not found\");\n  });\n}\n\nfunction logoutUser() {\n  axios.get(\"http://127.0.0.1:1337/user/logout\");\n  logout();\n  Router.push(\"/perktree\");\n}\n\nfunction updateUser(oldUsername, username, password, email, profilePicture, callback) {\n  console.log(\"before req: \", oldUsername, username, password); // check if username already exist in database\n\n  axios.put(\"http://127.0.0.1:1337/user/update/\".concat(oldUsername), {\n    username: username,\n    password: password,\n    email: email,\n    profilePicture: profilePicture\n  }).then(function (response) {\n    if (response && response.data.name == \"MongoError\" && response.data.code == 11000) {\n      callback({\n        error: \"Username already taken\"\n      });\n    } else if (response && response.data.length <= 0 || response && response.data.error) {\n      callback({\n        error: \"Error\"\n      });\n      logoutUser();\n    } else {\n      console.log(\"Successfully updated user\", response.data); // set the user data and boolean loggedin into localstorage\n\n      setUserLoggedin(response.data);\n      callback({\n        data: response.data\n      });\n    } // id not found\n\n  })[\"catch\"](function (err) {\n    console.error(err);\n    callback({\n      error: err\n    });\n  });\n}\n\nexport { authenticateUserLogin, createUser, deleteUser, logoutUser, updateUser, getUserbyUsername };","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/src/api/user.tsx"],"names":["axios","setUserLoggedin","logout","Router","Toast","authenticateUserLogin","username","password","callback","post","then","response","getUserbyUsername","data","res","push","error","console","wrongPasswordOrUsername","createUser","email","profilePicture","_id","get","err","alert","deleteUser","userid","logoutUser","updateUser","oldUsername","log","put","name","code","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setUserLoggedin, logout } from \"../api/userlocalstorage\";\nimport Router from \"next/router\";\nimport Toast from \"../components/Toast\";\n\nfunction authenticateUserLogin(\n  username: string,\n  password: string,\n  callback: any\n) {\n  axios\n    .post(\"http://127.0.0.1:1337/user/login\", {\n      username: username,\n      password: password,\n    })\n    .then((response) => {\n      // set the user data and boolean loggedin into localstorage\n      getUserbyUsername(response.data.username, (res) => {\n        setUserLoggedin(res.data);\n        Router.push(\"/perktree\");\n        return <Toast text={\"Successfully logged in\"}></Toast>;\n      });\n    })\n    .catch(function (error) {\n      console.error(error);\n      callback({ wrongPasswordOrUsername: true });\n    });\n}\n\n// Request a user based on username and password, if anything is found pass it back up to parent\nfunction createUser(\n  username: string,\n  password: string,\n  email: string,\n  callback: any\n) {\n  axios\n    .post(\"http://127.0.0.1:1337/user/new\", {\n      username: username,\n      password: password,\n      email: email,\n      profilePicture: \"\",\n    })\n    .then((response) => {\n      if (response.data.error) {\n        callback({ error: response.data.error });\n      } else {\n        delete response.data._id;\n        // set the user data and boolean loggedin into localstorage\n        setUserLoggedin(response.data);\n        Router.push(\"/perktree\");\n      }\n    })\n    .catch(function (error) {\n      console.error(error);\n      callback({ error: error });\n    });\n}\n\nfunction getUserbyUsername(username: string, callback) {\n  axios\n    .get(`http://127.0.0.1:1337/user/find/${username}`)\n    .then((res) => {\n      callback(res);\n      //username not found\n    })\n    .catch((err) => {\n      console.error(err);\n      alert(\"User not found\");\n    });\n}\n\nfunction deleteUser(username: string) {\n  axios\n    .get(`http://127.0.0.1:1337/user/find/${username}`)\n    .then((res) => {\n      let userid = res.data[0]._id;\n      axios\n        .delete(`http://127.0.0.1:1337/user/delete/${userid}`)\n        .then((res) => {\n          if (res) {\n            logout();\n            Router.push(\"/perktree\");\n          }\n          // id not found\n        })\n        .catch((err) => {\n          console.error(err);\n          alert(\"User not found\");\n        });\n      //username not found\n    })\n    .catch((err) => {\n      console.error(err);\n      alert(\"User not found\");\n    });\n}\n\nfunction logoutUser() {\n  axios.get(\"http://127.0.0.1:1337/user/logout\");\n  logout();\n  Router.push(\"/perktree\");\n}\n\nfunction updateUser(\n  oldUsername: string,\n  username: string,\n  password: string,\n  email: string,\n  profilePicture: string,\n  callback: any\n) {\n  console.log(\"before req: \", oldUsername, username, password);\n  // check if username already exist in database\n  axios\n    .put(`http://127.0.0.1:1337/user/update/${oldUsername}`, {\n      username: username,\n      password: password,\n      email: email,\n      profilePicture: profilePicture,\n    })\n    .then((response) => {\n      if (\n        response &&\n        response.data.name == \"MongoError\" &&\n        response.data.code == 11000\n      ) {\n        callback({ error: \"Username already taken\" });\n      } else if (\n        (response && response.data.length <= 0) ||\n        (response && response.data.error)\n      ) {\n        callback({ error: \"Error\" });\n        logoutUser();\n      } else {\n        console.log(\"Successfully updated user\", response.data);\n        // set the user data and boolean loggedin into localstorage\n        setUserLoggedin(response.data);\n        callback({ data: response.data });\n      }\n      // id not found\n    })\n    .catch((err) => {\n      console.error(err);\n      callback({ error: err });\n    });\n}\n\nexport {\n  authenticateUserLogin,\n  createUser,\n  deleteUser,\n  logoutUser,\n  updateUser,\n  getUserbyUsername,\n};\n"]},"metadata":{},"sourceType":"module"}