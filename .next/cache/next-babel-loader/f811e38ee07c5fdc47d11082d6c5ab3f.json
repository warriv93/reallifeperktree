{"ast":null,"code":"var _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/src/pages/perktree.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport Perk from '../components/Perk';\nimport '../style/perktree.scss';\nexport default class perktree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      perkLevelList: []\n    };\n  } //save perkLevel to state from each perk\n\n\n  updatePerkLevelList(perkLevel) {\n    // check if perklevel with same title as the new one exist in array\n    let oldPerkLevel = this.state.perkLevelList.find(perklevelitem => {\n      return perklevelitem.title == perkLevel.title;\n    }); //if exist check position in array and replace with new perklevel\n\n    if (oldPerkLevel) {\n      //get index in array of old item\n      this.state.perkLevelList[this.state.perkLevelList.indexOf(oldPerkLevel)] = perkLevel;\n    } // not exist in array just add it to the end of the array\n    else {\n        this.state.perkLevelList.push(perkLevel);\n      }\n  }\n\n  checkPerkLevels() {\n    console.log(\"perkLevelList\", this.state.perkLevelList);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"perktree-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Perk, {\n      updatePerkLevelList: perkLevel => this.updatePerkLevelList(perkLevel),\n      title: \"Strength\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), __jsx(Perk, {\n      updatePerkLevelList: perkLevel => this.updatePerkLevelList(perkLevel),\n      title: \"Endurance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(Perk, {\n      updatePerkLevelList: perkLevel => this.updatePerkLevelList(perkLevel),\n      title: \"Agility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), __jsx(Perk, {\n      updatePerkLevelList: perkLevel => this.updatePerkLevelList(perkLevel),\n      title: \"Charisma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), __jsx(Perk, {\n      updatePerkLevelList: perkLevel => this.updatePerkLevelList(perkLevel),\n      title: \"Intelligence\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.checkPerkLevels(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"CLICK ME\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/src/pages/perktree.tsx"],"names":["React","Component","Layout","Perk","perktree","constructor","props","state","perkLevelList","updatePerkLevelList","perkLevel","oldPerkLevel","find","perklevelitem","title","indexOf","push","checkPerkLevels","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAO,wBAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE5CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAc;AACVC,MAAAA,aAAa,EAAE;AADL,KAAd;AAGH,GAR2C,CAU5C;;;AACAC,EAAAA,mBAAmB,CAACC,SAAD,EAAsB;AACrC;AACA,QAAIC,YAAY,GAAG,KAAKJ,KAAL,CAAWC,aAAX,CAAyBI,IAAzB,CAAgCC,aAAD,IAAmB;AACjE,aAAOA,aAAa,CAACC,KAAd,IAAuBJ,SAAS,CAACI,KAAxC;AACH,KAFkB,CAAnB,CAFqC,CAMrC;;AACA,QAAIH,YAAJ,EAAkB;AACd;AACA,WAAKJ,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWC,aAAX,CAAyBO,OAAzB,CAAiCJ,YAAjC,CAAzB,IAA2ED,SAA3E;AACH,KAHD,CAIA;AAJA,SAKK;AACD,aAAKH,KAAL,CAAWC,aAAX,CAAyBQ,IAAzB,CAA8BN,SAA9B;AACH;AACJ;;AAEDO,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKZ,KAAL,CAAWC,aAAxC;AACH;;AAGDY,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,mBAAmB,EAAGV,SAAD,IAAe,KAAKD,mBAAL,CAAyBC,SAAzB,CAA1C;AAA+E,MAAA,KAAK,EAAE,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,IAAD;AAAM,MAAA,mBAAmB,EAAGA,SAAD,IAAe,KAAKD,mBAAL,CAAyBC,SAAzB,CAA1C;AAA+E,MAAA,KAAK,EAAE,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,MAAC,IAAD;AAAM,MAAA,mBAAmB,EAAGA,SAAD,IAAe,KAAKD,mBAAL,CAAyBC,SAAzB,CAA1C;AAA+E,MAAA,KAAK,EAAE,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,MAAC,IAAD;AAAM,MAAA,mBAAmB,EAAGA,SAAD,IAAe,KAAKD,mBAAL,CAAyBC,SAAzB,CAA1C;AAA+E,MAAA,KAAK,EAAE,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,MAAC,IAAD;AAAM,MAAA,mBAAmB,EAAGA,SAAD,IAAe,KAAKD,mBAAL,CAAyBC,SAAzB,CAA1C;AAA+E,MAAA,KAAK,EAAE,cAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EAQI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKO,eAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CADJ;AAYH;;AA9C2C","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout';\nimport Perk from '../components/Perk';\n\nimport '../style/perktree.scss';\n\nexport default class perktree extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            perkLevelList: []\n        })\n    }\n\n    //save perkLevel to state from each perk\n    updatePerkLevelList(perkLevel: Function) {\n        // check if perklevel with same title as the new one exist in array\n        let oldPerkLevel = this.state.perkLevelList.find( (perklevelitem) => {\n            return perklevelitem.title == perkLevel.title\n        });\n\n        //if exist check position in array and replace with new perklevel\n        if (oldPerkLevel) {\n            //get index in array of old item\n            this.state.perkLevelList[this.state.perkLevelList.indexOf(oldPerkLevel)] = perkLevel\n        }\n        // not exist in array just add it to the end of the array\n        else {\n            this.state.perkLevelList.push(perkLevel) \n        }\n    }\n    \n    checkPerkLevels() {\n        console.log(\"perkLevelList\", this.state.perkLevelList);\n    }\n    \n\n    render() {\n        return (\n            <Layout>\n                <div className=\"perktree-container\">\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Strength\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Endurance\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Agility\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Charisma\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Intelligence\"} />\n                </div>    \n                <button className=\"btn btn-success\" onClick={() => this.checkPerkLevels()}>CLICK ME</button>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}