{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/src/components/Perk.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Perklevel from './Perklevel';\nimport image_placeholder from \"../assets/404Code.jpg\";\nvar amountOfLevels = 5;\n\nvar Perk =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Perk, _Component);\n\n  function Perk(props) {\n    var _this;\n\n    _classCallCheck(this, Perk);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Perk).call(this, props));\n    _this.state = {\n      title: _this.props.title,\n      perkLevel: 0\n    };\n    return _this;\n  }\n\n  _createClass(Perk, [{\n    key: \"createPerkLevels\",\n    value: function createPerkLevels(amountOfLevels) {\n      for (var index = 1; index < amountOfLevels; index++) {\n        __jsx(Perklevel, {\n          image: image_placeholder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }); // <Perklevel onClick={(e: Event) => this.PerklevelClicked(e, index)} image={image_placeholder}/>\n\n      }\n    } // PerklevelClicked (e: Event, perkLevel: number) {\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"perktree-perk-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"perk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"perk-level title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.title)), this.createPerkLevels(amountOfLevels)));\n    }\n  }]);\n\n  return Perk;\n}(Component);\n\nexport { Perk as default };","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/src/components/Perk.tsx"],"names":["React","Component","Perklevel","image_placeholder","amountOfLevels","Perk","props","state","title","perkLevel","index","createPerkLevels"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,iBAAP,MAA8B,uBAA9B;AASA,IAAIC,cAAsB,GAAG,CAA7B;;IAEqBC,I;;;;;AACjB,gBAAYC,KAAZ,EAA2B;AAAA;;AAAA;;AACvB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE,KADR;AAEVC,MAAAA,SAAS,EAAE;AAFD,KAAd;AAHuB;AAO1B;;;;qCAEgBL,c,EAAwB;AACrC,WAAK,IAAIM,KAAa,GAAG,CAAzB,EAA4BA,KAAK,GAAGN,cAApC,EAAoDM,KAAK,EAAzD,EAA6D;AACzD,cAAC,SAAD;AAAW,UAAA,KAAK,EAAEP,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADyD,CAEzD;;AACH;AACJ,K,CAED;AAEA;;;;6BAES;AACL,aACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKG,KAAL,CAAWE,KAAlB,CAAjC,CADJ,EAGQ,KAAKG,gBAAL,CAAsBP,cAAtB,CAHR,CADJ,CADJ;AAUH;;;;EAhC6BH,S;;SAAbI,I","sourcesContent":["import React, { Component } from 'react'\nimport Perklevel from './Perklevel';\n\nimport image_placeholder from \"../assets/404Code.jpg\";\ninterface IProps {\n    title?: string,\n}\n\ninterface IState {\n    title?: string,\n    perkLevel: number,\n}\nlet amountOfLevels: number = 5;\n\nexport default class Perk extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = ({\n            title: this.props.title,\n            perkLevel: 0,\n        })\n    }\n\n    createPerkLevels(amountOfLevels: number) {\n        for (let index: number = 1; index < amountOfLevels; index++) {\n            <Perklevel image={image_placeholder}/>\n            // <Perklevel onClick={(e: Event) => this.PerklevelClicked(e, index)} image={image_placeholder}/>\n        }\n    }\n    \n    // PerklevelClicked (e: Event, perkLevel: number) {\n    \n    // }\n\n    render() {\n        return (\n            <div className=\"perktree-perk-container\">\n                <ul className=\"perk\">\n                    <li className=\"perk-level title\"><span>{this.props.title}</span></li>\n                    {\n                        this.createPerkLevels(amountOfLevels)\n                    }\n                </ul>\n            </div>    \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}