{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/src/pages/perktree.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\"; // import Perk from \"../components/Perk\";\n\nimport \"../style/perktree.scss\";\n\nvar perktree =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(perktree, _Component);\n\n  function perktree(props) {\n    var _this;\n\n    _classCallCheck(this, perktree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(perktree).call(this, props));\n    _this.state = {\n      perkList: [{\n        level: 0,\n        title: \"Strength\"\n      }, {\n        level: 0,\n        title: \"Endurance\"\n      }, {\n        level: 0,\n        title: \"Agility\"\n      }, {\n        level: 0,\n        title: \"Charisma\"\n      }, {\n        level: 0,\n        title: \"Intelligence\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(perktree, [{\n    key: \"createPerkList\",\n    value: function createPerkList() {\n      console.log(\"yes\");\n      this.state.perkList.map(function (level, title) {\n        console.log(level, title); //   return <Perk level={level} title={title} />;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"perktree-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.createPerkList));\n    }\n  }]);\n\n  return perktree;\n}(Component);\n\nexport { perktree as default };","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/src/pages/perktree.tsx"],"names":["React","Component","Layout","perktree","props","state","perkList","level","title","console","log","map","createPerkList"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAGA,OAAO,wBAAP;;IAQqBC,Q;;;;;AACnB,oBAAYC,KAAZ,EAA2B;AAAA;;AAAA;;AACzB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OADQ,EAER;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OAFQ,EAGR;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OAHQ,EAIR;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OAJQ,EAKR;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OALQ;AADC,KAAb;AAHyB;AAY1B;;;;qCAEgB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEA,WAAKL,KAAL,CAAWC,QAAX,CAAoBK,GAApB,CAAwB,UAACJ,KAAD,EAAQC,KAAR,EAAkB;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,KAAnB,EADwC,CAGxC;AACD,OAJD;AAKD;;;6BAEQ;AACP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKI,cAA1C,CADF,CADF;AAKD;;;;EA/BmCX,S;;SAAjBE,Q","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\n// import Perk from \"../components/Perk\";\nimport { Perk as IPerk } from \"../interfaces\";\n\nimport \"../style/perktree.scss\";\n\ninterface IProps {}\n\ninterface IState {\n  perkList: Array<IPerk>;\n}\n\nexport default class perktree extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      perkList: [\n        { level: 0, title: \"Strength\" },\n        { level: 0, title: \"Endurance\" },\n        { level: 0, title: \"Agility\" },\n        { level: 0, title: \"Charisma\" },\n        { level: 0, title: \"Intelligence\" }\n      ]\n    };\n  }\n\n  createPerkList() {\n    console.log(\"yes\");\n\n    this.state.perkList.map((level, title) => {\n      console.log(level, title);\n\n      //   return <Perk level={level} title={title} />;\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"perktree-container\">{this.createPerkList}</div>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}