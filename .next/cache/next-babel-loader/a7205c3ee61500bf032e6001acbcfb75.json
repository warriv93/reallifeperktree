{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/pages/perktree.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport Perk from '../components/Perk';\nimport '../style/perktree.scss';\n\nvar perktree =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(perktree, _Component);\n\n  function perktree(props) {\n    var _this;\n\n    _classCallCheck(this, perktree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(perktree).call(this, props));\n    _this.state = {\n      perkLevelList: []\n    };\n    return _this;\n  } //save perkLevel to state from each perk\n\n\n  _createClass(perktree, [{\n    key: \"updatePerkLevelList\",\n    value: function updatePerkLevelList(perkLevel) {\n      var foundTopic = this.state.perkLevelList.find(function (perklevelitem) {\n        return perklevelitem.title == perkLevel.title;\n      });\n      var found = this.state.perkLevelList.some(function (el) {\n        console.log(el);\n      });\n      if (!found) this.state.perkLevelList.push(perkLevel); //CHECK IF ALREADY EXIST\n    }\n  }, {\n    key: \"checkPerkLevels\",\n    value: function checkPerkLevels() {\n      console.log(\"perkLevelList\", this.state.perkLevelList);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"perktree-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Perk, {\n        updatePerkLevelList: function updatePerkLevelList(perkLevel) {\n          return _this2.updatePerkLevelList(perkLevel);\n        },\n        title: \"Strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), __jsx(Perk, {\n        updatePerkLevelList: function updatePerkLevelList(perkLevel) {\n          return _this2.updatePerkLevelList(perkLevel);\n        },\n        title: \"Perception\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), __jsx(Perk, {\n        updatePerkLevelList: function updatePerkLevelList(perkLevel) {\n          return _this2.updatePerkLevelList(perkLevel);\n        },\n        title: \"Endurance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), __jsx(Perk, {\n        updatePerkLevelList: function updatePerkLevelList(perkLevel) {\n          return _this2.updatePerkLevelList(perkLevel);\n        },\n        title: \"Agility\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(Perk, {\n        updatePerkLevelList: function updatePerkLevelList(perkLevel) {\n          return _this2.updatePerkLevelList(perkLevel);\n        },\n        title: \"Charisma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), __jsx(Perk, {\n        updatePerkLevelList: function updatePerkLevelList(perkLevel) {\n          return _this2.updatePerkLevelList(perkLevel);\n        },\n        title: \"Intelligence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.checkPerkLevels();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"CLICK MED\"));\n    }\n  }]);\n\n  return perktree;\n}(Component);\n\nexport { perktree as default };","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/pages/perktree.jsx"],"names":["React","Component","Layout","Perk","perktree","props","state","perkLevelList","perkLevel","foundTopic","find","perklevelitem","title","found","some","el","console","log","push","updatePerkLevelList","checkPerkLevels"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout';\nimport Perk from '../components/Perk';\n\nimport '../style/perktree.scss';\n\nexport default class perktree extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            perkLevelList: []\n        })\n    }\n\n    //save perkLevel to state from each perk\n    updatePerkLevelList(perkLevel) {\n        var foundTopic = this.state.perkLevelList.find( (perklevelitem) => {\n            return perklevelitem.title == perkLevel.title;\n          });\n        const found = this.state.perkLevelList.some(el => {console.log(el);\n        });\n\n        if (!found) this.state.perkLevelList.push(perkLevel)\n        //CHECK IF ALREADY EXIST\n        \n    }\n    \n    checkPerkLevels() {\n        console.log(\"perkLevelList\", this.state.perkLevelList);\n    }\n    \n\n    render() {\n        return (\n            <Layout>\n                <div className=\"perktree-container\">\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Strength\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Perception\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Endurance\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Agility\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Charisma\"} />\n                    <Perk updatePerkLevelList={(perkLevel) => this.updatePerkLevelList(perkLevel)} title={\"Intelligence\"} />\n                </div>    \n                <button onClick={() => this.checkPerkLevels()}>CLICK MED</button>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}