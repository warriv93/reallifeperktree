{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/pages/bitzPrices.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices';\nimport Fetch from \"isomorphic-unfetch\";\n\nvar Bitz = function Bitz(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Prices\"), __jsx(Prices, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), props.bpi.USD.rate, \" \", props.bpi.USD.code));\n};\n\nBitz.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            bpi: data.bpi\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Bitz;","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/pages/bitzPrices.jsx"],"names":["Layout","Prices","Fetch","Bitz","props","bpi","USD","rate","code","getInitialProps","fetch","res","json","data"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGA,KAAK,CAACC,GAAN,CAAUC,GAAV,CAAcC,IAJjB,OAIwBH,KAAK,CAACC,GAAN,CAAUC,GAAV,CAAcE,IAJtC,CADF,CADW;AAAA,CAAb;;AAWAL,IAAI,CAACM,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACDC,KAAK,CAAC,mDAAD,CADJ;;AAAA;AACbC,UAAAA,GADa;AAAA;AAAA,2CAEAA,GAAG,CAACC,IAAJ,EAFA;;AAAA;AAEbC,UAAAA,IAFa;AAAA,2CAIZ;AACHR,YAAAA,GAAG,EAAEQ,IAAI,CAACR;AADP,WAJY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeF,IAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Prices from '../components/Prices';\n\nimport Fetch from \"isomorphic-unfetch\"\n\nconst Bitz = (props) => (\n  <Layout>\n    <div>\n      <h1>Prices</h1>\n      <Prices />\n\n      {props.bpi.USD.rate} {props.bpi.USD.code}\n    </div>\n  </Layout>\n);\n\nBitz.getInitialProps = async function () {\n    const res = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\");\n    const data = await res.json();\n\n    return {\n        bpi: data.bpi\n    }\n}\n\nexport default Bitz;\n"]},"metadata":{},"sourceType":"module"}