{"ast":null,"code":"var _jsxFileName = \"/Users/madisontaskett/gitRepos/reallifeperktree/src/pages/login/component/newuser/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport \"../../styles/index.scss\";\nimport { createUser } from \"../../../../api/user\";\nexport default function Newuser(props) {\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      error = _useState4[0],\n      setError = _useState4[1]; // When username input value is changed update the state\n\n\n  function handleChangeUsername(e) {\n    setUsername(e.target.value);\n  } // When password input value is changed update the state\n\n\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  } // when submitting call authenticateUserLogin to make the request to the server\n\n\n  function onSubmit(e) {\n    e.preventDefault(); //if username and password both have strings with value run the authenticateUserLogin function otherwise show error message\n\n    username != \"\" && password != \"\" ? createUser(username, password, email, function (res) {\n      res.error && setError(res.error);\n    }) : setError(\"Please fill out username and password\");\n  }\n\n  return __jsx(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, error.length > 0 && __jsx(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, error), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"username\",\n    placeholder: \"Username\",\n    onChange: handleChangeUsername,\n    name: \"username\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChangePassword,\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: handleChangeEmail,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Create user\")));\n}","map":{"version":3,"sources":["/Users/madisontaskett/gitRepos/reallifeperktree/src/pages/login/component/newuser/index.tsx"],"names":["React","useState","createUser","Newuser","props","username","setUsername","password","setPassword","email","setEmail","error","setError","handleChangeUsername","e","target","value","handleChangePassword","handleChangeEmail","onSubmit","preventDefault","res","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,yBAAP;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,eAAe,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACNH,QAAQ,CAAC,EAAD,CADF;AAAA,MAC/BI,QAD+B;AAAA,MACrBC,WADqB;;AAAA,mBAENL,QAAQ,CAAC,EAAD,CAFF;AAAA,MAE/BM,QAF+B;AAAA,MAErBC,WAFqB;;AAAA,mBAGZP,QAAQ,CAAC,EAAD,CAHI;AAAA,MAG/BQ,KAH+B;AAAA,MAGxBC,QAHwB;;AAAA,mBAIZT,QAAQ,CAAC,EAAD,CAJI;AAAA,MAI/BU,KAJ+B;AAAA,MAIxBC,QAJwB,kBAMtC;;;AACA,WAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAC/BR,IAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GATqC,CAWtC;;;AACA,WAASC,oBAAT,CAA8BH,CAA9B,EAAiC;AAC/BN,IAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,WAASE,iBAAT,CAA2BJ,CAA3B,EAA8B;AAC5BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAlBqC,CAoBtC;;;AACA,WAASG,QAAT,CAAkBL,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACM,cAAF,GADmB,CAGnB;;AACAf,IAAAA,QAAQ,IAAI,EAAZ,IAAkBE,QAAQ,IAAI,EAA9B,GACIL,UAAU,CAACG,QAAD,EAAWE,QAAX,EAAqBE,KAArB,EAA4B,UAACY,GAAD,EAAS;AAC/CA,MAAAA,GAAG,CAACV,KAAJ,IAAaC,QAAQ,CAACS,GAAG,CAACV,KAAL,CAArB;AACD,KAFW,CADd,GAIIC,QAAQ,CAAC,uCAAD,CAJZ;AAKD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,KAAK,CAACW,MAAN,GAAe,CAAf,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBX,KAAtB,CAJJ,EAME;AAAM,IAAA,QAAQ,EAAEQ,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,QAAQ,EAAEN,oBAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,QAAQ,EAAEI,oBAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,EAAEC,iBAHZ;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAoBE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBF,CANF,CADF;AA+BD","sourcesContent":["import React, {useState} from \"react\";\nimport \"../../styles/index.scss\";\nimport { createUser } from \"../../../../api/user\";\n\nexport default function Newuser (props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // When username input value is changed update the state\n  function handleChangeUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  // When password input value is changed update the state\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  // when submitting call authenticateUserLogin to make the request to the server\n  function onSubmit(e) {\n    e.preventDefault();\n\n    //if username and password both have strings with value run the authenticateUserLogin function otherwise show error message\n    username != \"\" && password != \"\"\n      ? createUser(username, password, email, (res) => {\n        res.error && setError(res.error);\n      })\n      : setError(\"Please fill out username and password\");\n  }\n\n  return (\n    <div className=\"login-container\">\n      {/* <h3>Welcome!</h3>\n      <p>Create a new user</p> */}\n      {error.length > 0 && (\n        <p className=\"error\">{error}</p>\n      )}\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"username\"\n          placeholder=\"Username\"\n          onChange={handleChangeUsername}\n          name=\"username\"\n          autoFocus\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChangePassword}\n          name=\"password\"\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={handleChangeEmail}\n          name=\"email\"\n        />\n        <button className=\"btn\">Create user</button>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}