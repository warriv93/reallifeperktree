{"version":3,"file":"static/webpack/static/development/pages/perktree.js.07309cf54acd0ae4b531.hot-update.js","sources":["webpack:///./src/pages/perktree.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Perk from \"../components/Perk\";\n\nimport \"../style/perktree.scss\";\n\ninterface IProps {\n}\n\ninterface IState {\n    perkLevelList: array,\n    perkList: array\n}\n\nexport default class perktree extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      perkLevelList: [],\n      perkList: [\"Strength\", \"Endurance\", \"Agility\", \"Charisma\", \"Intelligence\"]\n    };\n  }\n\n  //save perkLevel to state from each perk\n  updatePerkLevelList(perkLevel: Function) {\n    // check if perklevel with same title as the new one exist in array\n    let oldPerkLevel = this.state.perkLevelList.find(perklevelitem => {\n      return perklevelitem.title == perkLevel.title;\n    });\n\n    //if exist check position in array and replace with new perklevel\n    if (oldPerkLevel) {\n      //get index in array of old item\n      this.state.perkLevelList[\n        this.state.perkLevelList.indexOf(oldPerkLevel)\n      ] = perkLevel;\n    }\n    // not exist in array just add it to the end of the array\n    else {\n      this.state.perkLevelList.push(perkLevel);\n    }\n  }\n\n  checkPerkLevels() {\n    console.log(\"perkLevelList\", this.state.perkLevelList);\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"perktree-container\">\n          <Perk\n            updatePerkLevelList={perkLevel =>\n              this.updatePerkLevelList(perkLevel)\n            }\n            title={\"Strength\"}\n          />\n          <Perk\n            updatePerkLevelList={perkLevel =>\n              this.updatePerkLevelList(perkLevel)\n            }\n            title={\"Endurance\"}\n          />\n          <Perk\n            updatePerkLevelList={perkLevel =>\n              this.updatePerkLevelList(perkLevel)\n            }\n            title={\"Agility\"}\n          />\n          <Perk\n            updatePerkLevelList={perkLevel =>\n              this.updatePerkLevelList(perkLevel)\n            }\n            title={\"Charisma\"}\n          />\n          <Perk\n            updatePerkLevelList={perkLevel =>\n              this.updatePerkLevelList(perkLevel)\n            }\n            title={\"Intelligence\"}\n          />\n        </div>\n        <button\n          className=\"btn btn-success\"\n          onClick={() => this.checkPerkLevels()}\n        >\n          CLICK ME\n        </button>\n      </Layout>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AASA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AALA;AAQA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA7EA;AACA;;;;;A","sourceRoot":""}